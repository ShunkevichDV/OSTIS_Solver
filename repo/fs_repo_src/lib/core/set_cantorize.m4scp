
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2010 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

/////////////////////////////////////////////////////
//        File: set_cantorize.m4scp
// Description: File contains procedure to cantorize
//			specified set (remove duplicate elements)
/////////////////////////////////////////////////////
// 		Author: Daniil Shunkevich
//        Date: 02.10.11

#include "scp_keynodes.scsy"

procedure(set_cantorize,
[[	// constants
]],
[{	// variables

	// input
	set1, set2,
	// other
	set, arc, arc, elem, seg, segments
	
}],
{[	// arguments
	1_:	in_: set1,		//	first set for union
	2_: out_: set2		//  	second set for union
]}
)
sys_get_location([1_: set1,2_: assign_: seg])
sys_set_default_segment([1_: fixed_: seg])
sys_spin_segment([1_: fixed_: seg,	2_: assign_: segments])

searchSetStr3([
	1_: fixed_: set1,
	2_: assign_: const_: pos_: arc,
	3_: assign_: elem,
	set3_: assign_: set
])
genEl([1_: assign_: const_: node_: set2])
label(next_elem)
ifVarAssign([1_: elem],,no_erase)
eraseSetStr3([
	1_: fixed_: set,
	2_: assign_: const_: pos_: f_: arc,
	3_: fixed_: elem
])
label(no_erase)
searchElStr3([
	1_: fixed_: set,
	2_: assign_: const_: pos_: arc,
	3_: assign_: elem
],,exit)
genElStr3([
	1_: fixed_: set2,
	2_: assign_: const_: pos_: arc,
	3_: fixed_: elem
],next_elem,next_elem)

label(exit)
ifVarAssign([1_: set],,no_erase_set)
eraseEl([1_: fixed_: set])
label(no_erase_set)
return()
end()