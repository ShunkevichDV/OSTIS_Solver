/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2011 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

//----------------------------------------------------------------------
// File: search_rel_connect_same_concepts.m4scp
// Description: Файл содержит операцию поиска отношений, области определения которых 
// являются надмножеством описываемого множества и каждая связка которых связывает 
// элементы описываемого множества между собой
//----------------------------------------------------------------------
// Author: Kharkunov Eugene
// Date: 18.11.11

#include "scp_keynodes.scsy"
#include "etc_questions.scsy"
#include "lib_search.scsy"
#include "lib_answer.scsy"
#include "lib_set.scsy"

program(init_op,
[[
	q_initiated;
	catch_output_arc;
	run_op;
]],
[{
}])

sys_set_event_handler([
	1_: fixed_: catch_output_arc,
	2_: fixed_: run_op,
	3_: fixed_: {1_: q_initiated}
])

return()

end()

procedure(run_op,
[[
	q_search_rel_connect_same_concepts;
	search_rel_connect_same_concepts;
	set_rm_el;
	answer_make;
]],
[{
	descr, element, arc, question_node, a, result, segment
}],
{[
	1_: in_: descr,
	2_: in_: element,
	3_: in_: arc,
	4_: in_: question_node
]})

printNl([1_: fixed_: /"\nchecking: Op_search_rel_connect_same_concepts\n"/])

sys_get_location([1_: fixed_: question_node, 2_: assign_: segment])
sys_open_segment([1_: fixed_: segment])
sys_set_default_segment([1_: fixed_: segment])

searchElStr3([
	1_: fixed_: q_search_rel_connect_same_concepts,
	2_: assign_: const_: pos_: arc_: a,
	3_: fixed_: question_node
], , finish)

callReturn([
	1_: fixed_: search_base_cycle,
	2_: fixed_: {[
		1_: question_node,
		2_: search_rel_connect_same_concepts,
		3_: result
	]}
], , , error)

callReturn([
	1_: set_rm_el,
	2_: fixed_: {[
		1_: result,
		2_: question_node
	]}
], , , error)

callReturn([
	1_: fixed_: answer_make,
	2_: fixed_: {[
		1_: question_node,
		2_: result
	]}
])

label(error)

label(finish)

return()

end