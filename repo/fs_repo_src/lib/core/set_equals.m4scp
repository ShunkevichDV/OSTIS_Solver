
/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2010 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

/////////////////////////////////////////////////////
//        File: set_equals.m4scp
// Description: File contains procedure to check if
// 			two sets are equals
/////////////////////////////////////////////////////
// 		Author: Daniil Shunkevich
//        Date: 11.07.11

#include "scp_keynodes.scsy"
#include "lib_set.scsy"

procedure(set_equals,
[[	// constants
]],
[{	// variables
	// input
	set1, set2,
	res,out_res
}],
{[	// arguments
	1_:	in_: set1,		//  first set for substracting (result)
	2_: in_: set2,	//  second set that will be substracted
	3_: out_: out_res
]}
)
callReturn([
	1_: fixed_: set_is_subset,
	2_: fixed_:
		{[
			1_: fixed_: set1,
			2_: fixed_: set2,
			3_: assign_: res
		]}
])
ifVarAssign([1_: res],,gen_bad_result)
eraseEl([1_: fixed_: res])

callReturn([
	1_: fixed_: set_is_subset,
	2_: fixed_:
		{[
			1_: fixed_: set2,
			2_: fixed_: set1,
			3_: assign_: res
		]}
])
ifVarAssign([1_: res],,gen_bad_result)
eraseEl([1_: fixed_: res])

label(gen_good_result)
genEl([1_: assign_: const_: node_: out_res],exit,exit)
label(gen_bad_result)
label(exit)
return()
end()